<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>Player1_Spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>107</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_gravity</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>-90</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveDx=0
moveDy=0
jumping = 1;
climbing = 0;
global.collectibles = 0;
global.hasTri = 0;
global.hasDia = 0;
global.hasCir = 0;
self.x = 64;
self.y = 32;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
old_x = self.x;
old_y = self.y;

x = old_x + hspeed;
y = old_y + vspeed;

if(!place_free(x,y))
{
    x = old_x;
    y = old_y;
}
*/

//Check if on a ladder, change controls accordingly
if(place_meeting(x,y, Ladder_Obj))
{
    gravity = 0;
    speed = 0;
    if keyboard_check(vk_up)
    {
        moveDx = 0;
        moveDy = -5;
        if(place_meeting(xprevious+moveDx,yprevious+moveDy,solid))
        {
            x = xprevious;
            y = yprevious;
        }
        else
        {
            x = xprevious + moveDx;
            y = yprevious + moveDy;
        }
    }
    if keyboard_check(vk_down)
    {
        moveDx = 0;
        moveDy = 5;
        if(place_meeting(xprevious+moveDx,yprevious+moveDy,solid))
        {
            x = xprevious;
            y = yprevious;
        }
        else
        {
            x = xprevious + moveDx;
            y = yprevious + moveDy;
        }
    }
    if keyboard_check(vk_left)
    {
        moveDx = -5;
        moveDy = 0;
        if (collision_rectangle(xprevious+moveDx,yprevious+moveDy,xprevious+moveDx+16,yprevious+moveDy+32,solid,true,false))
        //if(place_meeting(old_x+moveDx,old_y+moveDy,solid))
        {
            x = xprevious;
            y = yprevious;
        }
        else
        {
            x = xprevious + moveDx;
            y = yprevious + moveDy;
        }
    }
    if keyboard_check(vk_right)
    {
        moveDx = 5;
        moveDy = 0;
        if (collision_rectangle(xprevious+moveDx,yprevious+moveDy,xprevious+moveDx+16,yprevious+moveDy+32,solid,true,false))
        //if(place_meeting(old_x+moveDx,old_y+moveDy,solid))
        {
            x = xprevious;
            y = yprevious;
        }
        else
        {
            x = xprevious + moveDx;
            y = yprevious + moveDy;
        }
    }
}

//Not On a Ladder
else
{
    gravity = 1;
    if keyboard_check(vk_left)
    {
        if(self.x &gt; 0)
        {
            hspeed = -5;
        }
        else
        {
            hspeed = 0;
        }
    }
    if keyboard_check(vk_up)
    {
        if(jumping == 0)
        {
            audio_play_sound(Jump_Snd,1,false);
            jumping = 1;
            vspeed = -12;
        }
    }
    if keyboard_check(vk_right)
    {
        if(self.x &lt; 1264)
        {
            hspeed = 5;
        }
        else
        {
            hspeed = 0;
        }
    }
    /*
    if keyboard_check(vk_down)
    {
        if(jumping == 0)
        {
            jumping = 1;
            vspeed = 12;
        }
    }
    */
    if (keyboard_check_released(vk_left)||keyboard_check_released(vk_right))
    {
        if(jumping == 0)
        {
            hspeed = 0;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="FloorEdge_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = 0;
vspeed = 0;
self.y -= 1;

if(!(keyboard_check(vk_left) || keyboard_check(vk_right)))
{
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Wall_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = 0;
speed = 0;
self.x = self.xprevious;
self.y = self.yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="TriDoor_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = 0;
speed = 0;
self.x = self.xprevious;
self.y = self.yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="Floor_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = 0;
vspeed = 0;

if(!(keyboard_check(vk_left) || keyboard_check(vk_right)))
{
    hspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="DiaDoor_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = 0;
speed = 0;
self.x = self.xprevious;
self.y = self.yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="CirDoor_Obj">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jumping = 0;
speed = 0;
self.x = self.xprevious;
self.y = self.yprevious;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
